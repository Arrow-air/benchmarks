name: Create and publish a Docker images for server-web path

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-server-web

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        path: ["server-web"]
        package_name: ["actix-rest", "axum-graphql", "axum-rest", "poem-rest"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ./${{ matrix.path }}/.cargo/bin/
            ./${{ matrix.path }}/.cargo/registry/index/
            ./${{ matrix.path }}/.cargo/registry/cache/
            ./${{ matrix.path }}/.cargo/git/db/
            ./${{ matrix.path }}/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Dotenv Action
        uses: falti/dotenv-action@v0.2.8
        id: dotenv
        with:
          path: ${{ matrix.path }}/${{ matrix.package_name }}/.env

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: 'amd64,arm64'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}/${{ matrix.package_name }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}},value=${{steps.dotenv.outputs.version}}
            type=semver,pattern={{major}}.{{minor}},value=${{steps.dotenv.outputs.version}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: ${{ matrix.path }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          build-args: |
            PACKAGE_NAME=${{ matrix.package_name }}
